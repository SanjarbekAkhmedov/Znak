@model ProductEditViewModel

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="text-center">Edit Product</h4>
                </div>
                <div class="card-body">
                    <form method="post" asp-controller="Product" asp-action="Edit" enctype="multipart/form-data">
                        <input type="hidden" asp-for="Id" />
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input class="form-control" type="text" id="name" asp-for="Name" />
                        </div>
                        <div class="form-group">
                            <label for="description">Description:</label>
                            <input class="form-control" type="text" id="description" asp-for="Description" />
                        </div>
                        <div class="form-group">
                            <label for="price">Price:</label>
                            <input class="form-control" type="text" id="price" asp-for="Price" />
                        </div>
                        <div class="form-group">
                            <label for="category">Select Category:</label>
                            <select class="form-control" id="category" asp-for="ProductCategoryId" asp-items="@(new SelectList(ViewBag.ProductCategories, nameof(ProductCategory.Id), nameof(ProductCategory.Name), Model.ProductCategoryId))">
                                <option value="">Select Category</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="unit">Select Unit:</label>
                            <select class="form-control" id="unit" asp-for="UnitMeasureId" asp-items="@(new SelectList(ViewBag.UnitMeasures, nameof(UnitMeasure.Id), nameof(UnitMeasure.Name), Model.UnitMeasureId))">
                                <option value="">Select Unit</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="image">Upload Image:</label>
                            <input type="file" class="form-control-file" id="image" asp-for="Image" onchange="previewImage(event)">
                            <input type="hidden" asp-for="ImageBytes" />
                        </div>
                        <div class="form-group" id="imageContainer">
                            @if (Model.ImageBytes != null)
                            {
                                <img id="imagePreview" class="img-fluid" src="data:image;base64,@Convert.ToBase64String(Model.ImageBytes)" alt="Image Preview" style="display: block;">
                            }
                            else
                            {
                                <span id="noImageText" style="display: none;">No image available</span>
                            }
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-success">Update Product</button>
                        </div>
                        <div class="form-group">
                            <p><a asp-action="Index" asp-controller="Product">Return to Product List</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var imagePreview = document.getElementById('imagePreview');
            imagePreview.src = reader.result;
            imagePreview.style.display = 'block';
            var noImageText = document.getElementById('noImageText');
            noImageText.style.display = 'none';
        }
        reader.readAsDataURL(event.target.files[0]);
    }
</script>
